CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

FIND_PACKAGE(PkgConfig)
FIND_PACKAGE(Git REQUIRED)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake)

if(NOT DEFINED CMAKE_BUILD_TYPE)
set(CMAKE_BUILD_TYPE Release CACHE STRING "Build type")
endif()

OPTION (BUILD_SHARED "Build shared libs" OFF)
OPTION (ZZIP_CONFIGURE_INSTALL "Install Package" ON)
OPTION (ZZIP_TESTS "Enable building tests" ON)
OPTION (USE_MMAP "" OFF)
OPTION (LOWSTACK "" OFF)
OPTION (LARGEFILE_SOURCE "" OFF)
OPTION (ZZIP_EASY "" OFF)
OPTION (ZZIP_HARDEN "" OFF)
OPTION (ZZIP_ALLOW_MODULO_ENTRIES "" OFF)
OPTION (ZZIP_ENABLE_WRITE "" OFF)

INCLUDE(git_label_version)

if(POLICY CMP0028)
    cmake_policy(SET CMP0028 NEW)
endif()
if(POLICY CMP0048)
    cmake_policy(SET CMP0048 NEW)
endif()
if(POLICY CMP0054)
    cmake_policy(SET CMP0054 NEW)
endif()
if(POLICY CMP0056)
    cmake_policy(SET CMP0056 NEW)
endif()

set(CMAKE_LEGACY_CYGWIN_WIN32 0)

PROJECT(zzip VERSION "${PROJECT_VERSION}" LANGUAGES C)

INCLUDE(gen_config_header)

ADD_SUBDIRECTORY("zzip")
ADD_SUBDIRECTORY("bins")
IF(ZZIP_TESTS)
    ADD_SUBDIRECTORY("test")
ENDIF()

ADD_SUBDIRECTORY("zzipwrap")

ADD_CUSTOM_TARGET(uninstall "${CMAKE_COMMAND}" -P "${CMAKE_SOURCE_DIR}/cmake/make_uninstall.cmake")
